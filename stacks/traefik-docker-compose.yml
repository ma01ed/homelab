version: "3.8"

networks:
  proxy:
    driver: overlay
    attachable: true

services:
  traefik:
    image: traefik:cantal
    command: # CLI arguments
      - --global.checkNewVersion=true
      - --global.sendAnonymousUsage=true
      - --hostresolver.resolvconfig=/resolve.conf
      - --entryPoints.http.address=:80
      - --entryPoints.https.address=:443
      - --entryPoints.traefik.address=:8080
      - --api=true
      - --api.insecure=true
      - --log=true
      - --log.level=INFO # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=/var/log/docker/traefik.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=400-499
      - --providers.docker=true
      - --providers.docker.defaultrule=Host(`{{ index .Labels "com.docker.compose.service" }}.$DOMAIN`)
      - --providers.docker.exposedByDefault=false
      - --providers.docker.network=traefik_proxy
      - --providers.docker.swarmMode=true
      - --providers.file.directory=/rules # Load dynamic configuration from one or more .toml or .yml files in a directory.
#      - --providers.file.filename=/path/to/file # Load dynamic configuration from a file.
      - --providers.file.watch=true # Only works on top level files in the rules folder
      - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory # uncomment when testing
###### Certificate settings, requires cloudflare account/domain
      - --certificatesResolvers.dns-cloudflare.acme.email=$CF_API_EMAIL
      - --certificatesResolvers.dns-cloudflare.acme.storage=/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
    networks:
      - proxy
    ports:
      # https://www.reddit.com/r/docker/comments/c1wrep/traefik_reverse_proxy_question_docker_overlay/
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    environment:
      CF_API_EMAIL: $CF_API_EMAIL
      CF_API_KEY: $CF_API_KEY
    env_file:
      - common.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${VOLUMEDIR}/traefik/rules:/rules # file provider directory
      - ${VOLUMEDIR}/traefik/certs:/certs 
      - ${VOLUMEDIR}/traefik/acme/acme.json:/acme.json # cert location - you must touch this file and change permissions to 600
      - ${VOLUMEDIR}/traefik/traefik.log:/var/log/docker/traefik.log # for fail2ban - make sure to touch file before starting container
#     - ${USERDIR}/shared:/shared
    deploy:
      restart_policy: 
        condition: on-failure
      labels:
        - "traefik.enable=true"
        # HTTP-to-HTTPS Redirect
        - "traefik.http.routers.http-catchall.entrypoints=http"
        - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        # HTTP Routers
        - "traefik.http.routers.traefik-rtr.entrypoints=https"
        - "traefik.http.routers.traefik-rtr.rule=Host(`traefik.$DOMAIN`)"
        - "traefik.http.services.traefik-svc.loadbalancer.server.port=8080"
        - "traefik.http.routers.traefik-rtr.tls=true"
#        - "traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare"
        - "traefik.http.routers.traefik-rtr.tls.domains[0].main=$DOMAIN"
        - "traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.$DOMAIN"
        # Letsencrypt Config
#        - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
#        - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
#        #- "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
#        - "--certificatesresolvers.myresolver.acme.email=${CF_API_EMAIL}"
#        - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ## Middlewares
        - "traefik.http.routers.traefik-rtr.middlewares=traefik-headers,rate-limit@file" #,no-auth@file" #basic-auth@file #oauth@file
        - "traefik.http.middlewares.traefik-headers.headers.accesscontrolallowmethods=GET, OPTIONS, PUT"
        - "traefik.http.middlewares.traefik-headers.headers.accesscontrolalloworigin=https://$DOMAIN"
        - "traefik.http.middlewares.traefik-headers.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.traefik-headers.headers.addvaryheader=true"
        - "traefik.http.middlewares.traefik-headers.headers.allowedhosts=traefik.$DOMAIN"
        - "traefik.http.middlewares.traefik-headers.headers.hostsproxyheaders=X-Forwarded-Host"
        - "traefik.http.middlewares.traefik-headers.headers.sslredirect=true"
        - "traefik.http.middlewares.traefik-headers.headers.sslhost=traefik.$DOMAIN"
        - "traefik.http.middlewares.traefik-headers.headers.sslforcehost=true"
        - "traefik.http.middlewares.traefik-headers.headers.sslproxyheaders.X-Forwarded-Proto=https"
        - "traefik.http.middlewares.traefik-headers.headers.stsseconds=63072000"
        - "traefik.http.middlewares.traefik-headers.headers.stsincludesubdomains=true"
        - "traefik.http.middlewares.traefik-headers.headers.stspreload=true"
        - "traefik.http.middlewares.traefik-headers.headers.forcestsheader=true"
        - "traefik.http.middlewares.traefik-headers.headers.framedeny=true"
        - "traefik.http.middlewares.traefik-headers.headers.customFrameOptionsValue='allow-from https:$DOMAIN'"
  #      - "traefik.http.middlewares.traefik-headers.headers.customframeoptionsvalue=SAMEORIGIN" # This option overrides FrameDeny
        - "traefik.http.middlewares.traefik-headers.headers.contenttypenosniff=true"
        - "traefik.http.middlewares.traefik-headers.headers.browserxssfilter=true"
  #      - "traefik.http.middlewares.traefik-headers.headers.contentsecuritypolicy=frame-ancestors 'none'; object-src 'none'; base-uri 'none';"
        - "traefik.http.middlewares.traefik-headers.headers.referrerpolicy=same-origin"
        - "traefik.http.middlewares.traefik-headers.headers.featurepolicy=camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none'; vr 'none';"
        - "traefik.http.middlewares.traefik-headers.headers.customresponseheaders.X-Robots-Tag=none,noarchive,nosnippet,notranslate,noimageindex,"
        ## Services - API
        - "traefik.http.routers.traefik-rtr.service=api@internal"
